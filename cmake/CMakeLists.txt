file(REAL_PATH "~" HOME EXPAND_TILDE)
set(CMAKE_INSTALL_PREFIX ${HOME}/project_root)
link_directories(${CMAKE_INSTALL_PREFIX}/lib)
include_directories(${CMAKE_INSTALL_PREFIX}/include)

if(WIN32)
    add_compile_definitions(_WIN32_WINNT=0x0A00)
    add_compile_options(-bigobj)
    set(CMAKE_C_COMPILER "cl")
    set(CMAKE_CXX_COMPILER "cl")
elseif(APPLE)
    add_compile_options(-fexperimental-library)
    set(CMAKE_C_COMPILER "clang")
    set(CMAKE_CXX_COMPILER "clang++")
elseif(LINUX)
    set(CMAKE_C_COMPILER "gcc")
    set(CMAKE_CXX_COMPILER "g++")
endif()

function(get_package pkg target)
    find_package(${pkg} REQUIRED PATHS "${CMAKE_INSTALL_PREFIX}/lib/cmake" NO_DEFAULT_PATH)
    list(APPEND ALL_LIBS ${target})
    set(ALL_LIBS "${ALL_LIBS}" PARENT_SCOPE)
endfunction()

function(get_library lib)
    find_library(${lib} REQUIRED NAMES ${lib} PATHS "${CMAKE_INSTALL_PREFIX}/lib" NO_DEFAULT_PATH)
    list(APPEND ALL_LIBS ${${lib}})
    set(ALL_LIBS "${ALL_LIBS}" PARENT_SCOPE)
endfunction()

function(make_executable name)
    add_executable("${name}")
    target_sources("${name}" PRIVATE ${ALL_SOURCES})
    target_link_libraries("${name}" PRIVATE ${ALL_LIBS})
endfunction()
